//Ricardo Lima 2565510
//Geisily Varga 2478404;
//Raí I. Morato 2623420;

package br.com.banco.visao;
import javax.swing.JOptionPane;

import br.com.banco.controle.GerenciadorDeContas;
import br.com.banco.modelo.ContaBancaria;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * @author Ricardo
 * SRP: Responsabilidade única - Interface de conta bancária
 */
public class FormConta extends javax.swing.JFrame {
    
    // SRP: Constantes para mensagens e títulos, facilitando manutenção
    private static final String TITULO_ERRO = "Erro";
    private static final String TITULO_CONFIRMACAO = "Confirmação";
    private static final String MENSAGEM_CONTA_EXCLUIDA = "Conta excluída com sucesso!";
    private static final String MENSAGEM_ERRO_EXCLUIR = "Erro ao excluir conta. Verifique se o saldo está zerado.";
    private static final String MENSAGEM_CONFIRMAR_EXCLUSAO = "Tem certeza que deseja excluir esta conta?";
    private static final String MENSAGEM_SAIR = "Deseja realmente sair?";
    private static final String TIPO_CONTA_SALARIO = "Salário";
    
    /**
     * SRP: Esta classe manipula apenas a interface da conta, não faz regras de negócio.
     */
    private ContaBancaria conta;
    
    public FormConta(ContaBancaria conta) {
        this.conta = conta;
        initComponents();
        preencherDados();
        verificarTipoConta();
    }
    
    private void preencherDados() {
        if (conta != null) {
            cxNumeroConta.setText(conta.getNumeroConta());
            cxAgencia.setText(conta.getAgencia());
            cxSaldo.setText("R$ " + String.format("%.2f", conta.getSaldo()));
            cxTitular.setText(conta.getTitular());
            cxTipoConta.setText(conta.getTipoConta());
        }
    }

    private void verificarTipoConta() {
        if (conta != null && TIPO_CONTA_SALARIO.equalsIgnoreCase(conta.getTipoConta())) {
            btPix.setEnabled(false);
        }
    }
    
    // Método para atualizar o saldo da conta em tempo real
    public void atualizarSaldo() {
        if (conta != null) {
            // Buscar a conta atualizada no banco de dados
            ContaBancaria contaAtualizada = GerenciadorDeContas.buscarConta(conta.getNumeroConta(), conta.getAgencia());
            if (contaAtualizada != null) {
                this.conta = contaAtualizada;
                cxSaldo.setText("R$ " + String.format("%.2f", conta.getSaldo()));
                System.out.println("Saldo atualizado: R$ " + String.format("%.2f", conta.getSaldo()));
            }
        }
    }
    
    // Getter para a conta atual
    public ContaBancaria getConta() {
        return conta;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtNumeroConta = new javax.swing.JLabel();
        btSair = new javax.swing.JButton();
        rtAgencia = new javax.swing.JLabel();
        rtSaldo = new javax.swing.JLabel();
        rtTitular = new javax.swing.JLabel();
        rtTipoConta = new javax.swing.JLabel();
        btDepositar = new javax.swing.JButton();
        btSacar = new javax.swing.JButton();
        btPix = new javax.swing.JButton();
        cxTipoConta = new javax.swing.JLabel();
        cxAgencia = new javax.swing.JLabel();
        cxTitular = new javax.swing.JLabel();
        cxNumeroConta = new javax.swing.JLabel();
        cxSaldo = new javax.swing.JLabel();
        btExcluir = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rtNumeroConta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtNumeroConta.setText("Número da conta");

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        rtAgencia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtAgencia.setText("Agência");

        rtSaldo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtSaldo.setText("Saldo Disponível");

        rtTitular.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtTitular.setText("Titular");

        rtTipoConta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtTipoConta.setText("Tipo de Conta");

        btDepositar.setText("Depositar");
        btDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDepositarActionPerformed(evt);
            }
        });

        btSacar.setText("Sacar");
        btSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSacarActionPerformed(evt);
            }
        });

        btPix.setText("Transferir Via PIX");
        btPix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPixActionPerformed(evt);
            }
        });

        cxTipoConta.setText("Tipo");

        cxAgencia.setText("Agencia");

        cxTitular.setText("Nome");

        cxNumeroConta.setText("Conta");

        cxSaldo.setText("R$ 0,00");

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rtTitular, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rtTipoConta, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cxTipoConta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cxTitular, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rtAgencia, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cxAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cxNumeroConta, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btAtualizar)
                                        .addComponent(rtNumeroConta))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rtSaldo)
                                .addGap(99, 99, 99)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(126, 126, 126)
                            .addComponent(cxSaldo)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btSair))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btDepositar)
                            .addGap(18, 18, 18)
                            .addComponent(btPix)
                            .addGap(18, 18, 18)
                            .addComponent(btSacar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btAtualizar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtTitular)
                    .addComponent(rtNumeroConta))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cxNumeroConta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cxTitular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rtTipoConta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cxTipoConta))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rtAgencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cxAgencia)))
                .addGap(18, 18, 18)
                .addComponent(rtSaldo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cxSaldo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDepositar)
                    .addComponent(btPix)
                    .addComponent(btSacar))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSair)
                    .addComponent(btExcluir))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void btDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDepositarActionPerformed
        abreDeposito();
    }//GEN-LAST:event_btDepositarActionPerformed

    private void btPixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPixActionPerformed
        abrePix();
    }//GEN-LAST:event_btPixActionPerformed

    private void btSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSacarActionPerformed
        abreSacar();
    }//GEN-LAST:event_btSacarActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // Permitir ao usuário atualizar apenas o tipo de conta
        String[] tipos = {"Corrente", "Poupança", "Salário"};
        String tipoAtual = conta.getTipoConta();
        String novoTipo = (String) JOptionPane.showInputDialog(
            this,
            "Selecione o novo tipo de conta:",
            "Atualizar Tipo de Conta",
            JOptionPane.QUESTION_MESSAGE,
            null,
            tipos,
            tipoAtual
        );
        if (novoTipo != null && !novoTipo.equals(tipoAtual)) {
            boolean sucesso = GerenciadorDeContas.atualizarTipoConta(conta.getNumeroConta(), conta.getAgencia(), novoTipo);
            if (sucesso) {
                conta = GerenciadorDeContas.buscarConta(conta.getNumeroConta(), conta.getAgencia());
                preencherDados();
                JOptionPane.showMessageDialog(this, "Tipo de conta atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao atualizar tipo de conta.", TITULO_ERRO, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluirConta();
    }//GEN-LAST:event_btExcluirActionPerformed
   
    public void abreSacar(){
        FormSacar telaSacar = new FormSacar(this);
        telaSacar.setVisible(true);
    }
    
    public void abrePix(){
        FormPix formPix = new FormPix(this);
        formPix.setVisible(true);
    }
    
    public void abreDeposito(){
        FormDeposito telaDeposito = new FormDeposito(this);
        telaDeposito.setVisible(true);
    }
    
    /**
     * Exclui a conta atual com confirmação do usuário
     * Boa Prática 2: Tratamento de exceções para melhor robustez
     */
    private void excluirConta() {
        try {
            int resposta = JOptionPane.showConfirmDialog(
                this,
                MENSAGEM_CONFIRMAR_EXCLUSAO,
                TITULO_CONFIRMACAO,
                JOptionPane.YES_NO_OPTION
            );
            
            if (resposta == JOptionPane.YES_OPTION) {
                boolean sucesso = GerenciadorDeContas.excluirConta(conta.getNumeroConta(), conta.getAgencia());
                
                if (sucesso) {
                    JOptionPane.showMessageDialog(this, MENSAGEM_CONTA_EXCLUIDA, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    dispose(); // Fecha a tela atual
                } else {
                    JOptionPane.showMessageDialog(this, MENSAGEM_ERRO_EXCLUIR, TITULO_ERRO, JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro inesperado: " + e.getMessage(), TITULO_ERRO, JOptionPane.ERROR_MESSAGE);
            System.err.println("Erro ao excluir conta: " + e.getMessage());
        }
    }
    
    public void sair(){
        int resp = JOptionPane.showConfirmDialog(
                null,
                MENSAGEM_SAIR,
                TITULO_CONFIRMACAO,
                JOptionPane.YES_NO_OPTION
        );
        if(resp == 0){
            //System.exit(0);
            dispose();
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormConta(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btDepositar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btPix;
    private javax.swing.JButton btSacar;
    private javax.swing.JButton btSair;
    private javax.swing.JLabel cxAgencia;
    private javax.swing.JLabel cxNumeroConta;
    private javax.swing.JLabel cxSaldo;
    private javax.swing.JLabel cxTipoConta;
    private javax.swing.JLabel cxTitular;
    private javax.swing.JLabel rtAgencia;
    private javax.swing.JLabel rtNumeroConta;
    private javax.swing.JLabel rtSaldo;
    private javax.swing.JLabel rtTipoConta;
    private javax.swing.JLabel rtTitular;
    // End of variables declaration//GEN-END:variables
}
